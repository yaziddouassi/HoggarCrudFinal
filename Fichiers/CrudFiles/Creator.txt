<template>
  <div class="min-[800px]:flex w-full text-black">
    <Sidebarre />
    <div class="min-h-[100vh] w-full  overflow-x-auto bg-[#DFDFDF]">
      <Navbarre/>
      <div> <FormTop /> </div>

      <div>
        <form @submit.prevent="submit('creer')">
          <Conteneur  :class="'grid max-[700px]:grid-cols-1 grid-cols-2 p-[10px] gap-[10px]'" />

          <div class="p-[10px] pt-[0px]">
            <button class="bg-[blue] w-[100px] text-white p-[9px] rounded-[2px]" type="submit">
              Create
            </button>
            &nbsp;
            
            <button v-if="hoggarcreate.settings.hogarShowOther === true"
             type="button" @click="submit('other')" class="border-[1px] border-black w-[140px] text-black p-[9px] rounded-[2px]">
              Create Other
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</template>

<script setup>
import Sidebarre from '@/HoggarLibs/Sidebarre.vue';
import Navbarre from '@/HoggarLibs/Navbarre.vue'
import FormTop from '@/HoggarLibs/Creator/FormTop.vue';
import { HoggarCreate } from '@/HoggarLibs/stores/hoggarcreate';
import Conteneur from '@/HoggarLibs/Creator/Conteneur.vue';
import { creationService } from '@/HoggarLibs/Service/creationService';


const props = defineProps({
  routes: {
    type: Object,
    required: true
  }, 
  user: {
    type: Object,
    required: true
  },
  hoggarInputs: {
    type: Object,
    required: true
  },
  hoggarSettings: {
    type: Object,
    required: true
  },
});


const hoggarcreate = HoggarCreate();
const { setSettings ,submit  } = creationService()

setSettings()





</script>