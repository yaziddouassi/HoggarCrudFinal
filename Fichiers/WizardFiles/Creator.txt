<template>
  <div class="min-[800px]:flex w-full text-black">
    <Sidebarre />
    <div class="min-h-[100vh] w-full overflow-x-auto bg-[#DFDFDF]">
      <Navbarre/>
      <div> <FormTop/>  </div>
      <div> <WizardStep/> </div>

      <div>
        <form @submit.prevent="submit('creer')">
          
           <div>
            <Conteneur/>
           </div>


          <div class="p-[10px] max-w-[700px] m-auto pt-[0px] flex gap-[5px]">

            <button  v-if="(hoggarinput.wizardCurrent == hoggarinput.wizardCount) ||
                hoggarinput.wizardStop.includes(hoggarinput.wizardCurrent)"
            
            class="bg-[blue] w-[100px] text-white p-[9px] rounded-[2px]" type="submit">
              Create
            </button>

            <button  v-if="(hoggarinput.wizardCurrent != 1)" @click="reculer()"
            class="bg-[black] w-[100px] text-white p-[9px] rounded-[2px]" type="button">
              Previous
            </button>

            <button v-if="(hoggarinput.wizardCurrent != hoggarinput.wizardCount)"
            class="bg-[black] w-[100px] text-white p-[9px] rounded-[2px]" type="button"
            @click="submit('next')">
              Next
            </button>
            
            <button v-if="(wizardcreate.settings.hogarShowOther === true
             && hoggarinput.wizardCurrent == hoggarinput.wizardCount) ||
             (wizardcreate.settings.hogarShowOther === true
             && hoggarinput.wizardStop.includes(hoggarinput.wizardCurrent))"
             type="button" @click="submit('other')" class="border-[1px] border-black w-[140px] text-black p-[9px] rounded-[2px]">
              Create Other
            </button>
          </div>


        </form>
      </div>
    </div>
  </div>
</template>

<script setup>
import Sidebarre from '@/HoggarLibs/Sidebarre.vue';
import Navbarre from '@/HoggarLibs/Navbarre.vue'
import Conteneur from '@/HoggarLibs/WizardCreator/Conteneur.vue';
import FormTop from '@/HoggarLibs/WizardCreator/FormTop.vue';
import { HoggarInput } from '@/HoggarLibs/stores/hoggarinput';
import { WizardCreate } from '@/HoggarLibs/stores/wizardcreate';
import WizardStep from '@/HoggarLibs/WizardCreator/WizardStep.vue';
import { wizardCreateService } from '@/HoggarLibs/Service/wizardCreateService';

const props = defineProps({
  routes: {
    type: Object,
    required: true
  }, 
  user: {
    type: Object,
    required: true
  }, 
  hogarInputs: {
    type: Object,
    required: true
  },
  hogarSettings: {
    type: Object,
    required: true
  },
  wizardForm: {
    type: Object,
    required: true
  },
  wizardLabel: {
    type: Object,
    required: true
  },
  wizardStop: {
    type: Object,
    required: true
  },
  wizardCount: {
    type: Number,
    required: true
  },

});


const hoggarinput = HoggarInput();
const wizardcreate = WizardCreate();
const { setSettings ,submit ,reculer  } = wizardCreateService()

setSettings()




</script>