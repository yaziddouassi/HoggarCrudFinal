<template>
<div class="min-[800px]:flex w-full text-black">
  <Sidebarre/>
    <div class="min-h-[100vh] w-full  overflow-x-auto  bg-[#DFDFDF]">
      <Navbarre/>
      <div> <FormTop/> </div>
      <div> <WizardStep/> </div>
      
      <div>
        <form @submit.prevent="submit('save')">
          <div>
            <Conteneur/>
          </div>
          
          <div class="p-[10px] max-w-[700px] m-auto pt-[0px] flex gap-[5px]">

<button  v-if="(hoggarinput.wizardCurrent == hoggarinput.wizardCount) ||
    hoggarinput.wizardStop.includes(hoggarinput.wizardCurrent)"

class="bg-[blue] w-[100px] text-white p-[9px] rounded-[2px]" type="submit">
  Update
</button>

<button  v-if="(hoggarinput.wizardCurrent != 1)" @click="reculer()"
class="bg-[black] w-[100px] text-white p-[9px] rounded-[2px]" type="button">
  Previous
</button>

<button v-if="(hoggarinput.wizardCurrent != hoggarinput.wizardCount)"
class="bg-[black] w-[100px] text-white p-[9px] rounded-[2px]" type="button"
@click="submit('next')">
  Next
</button>


</div>   
        
        </form>
      </div>




    </div>
</div>
</template>

<script setup>
import Sidebarre from '@/HoggarLibs/Sidebarre.vue';
import Navbarre from '@/HoggarLibs/Navbarre.vue'
import Conteneur from '@/HoggarLibs/WizardUpdate/Conteneur.vue';
import FormTop from '@/HoggarLibs/WizardUpdate/FormTop.vue';
import { HoggarInput } from '@/HoggarLibs/stores/hoggarinput';
import WizardStep from '@/HoggarLibs/WizardUpdate/WizardStep.vue';
import { wizardUpdateService } from '@/HoggarLibs/Service/wizardUpdateService';

const props = defineProps({
  routes: {
    type: Object,
    required: true
  }, 
  user: {
    type: Object,
    required: true
  },
  hoggarInputs: {
    type: Object,
    required: true
  },
  hoggarSettings: {
    type: Object,
    required: true
  },
  hoggarRecordInput: {
    type: Object,
    required: true
  },
  wizardForm: {
    type: Object,
    required: true
  },
  wizardLabel: {
    type: Object,
    required: true
  },
  wizardStop: {
    type: Object,
    required: true
  },
  wizardCount: {
    type: Number,
    required: true
  },
});

 
  const hoggarinput = HoggarInput();
  const { setSettings ,submit ,reculer  } = wizardUpdateService()

  setSettings()
  






</script>