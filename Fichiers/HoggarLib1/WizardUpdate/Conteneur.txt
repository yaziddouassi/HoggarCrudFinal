<template>
    <div class="max-w-[700px] m-auto grid grid-cols-1  p-[10px] pt-[0px] gap-[10px]">
      <div 
        v-for="(item, index) in hoggarinput.hoggarDataFields"
        :key="index" >
        
          <Editeur  v-if="hoggarinput.hoggarDataTypes[index] === 'Quill'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)" :cle="index" />
          
          <InputText v-if="hoggarinput.hoggarDataTypes[index] === 'Text'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

           <Password v-if="hoggarinput.hoggarDataTypes[index] === 'Password'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

          <InputRadio v-if="hoggarinput.hoggarDataTypes[index] === 'Radio'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

          <InputSelect v-if="hoggarinput.hoggarDataTypes[index] === 'Select'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

           <Textarea v-if="hoggarinput.hoggarDataTypes[index] === 'Textarea'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index"/>

           <CheckBox v-if="hoggarinput.hoggarDataTypes[index] === 'Checkbox'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

          <CheckBoxMultiple v-if="hoggarinput.hoggarDataTypes[index] === 'CheckboxList'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" /> 

           <InputNumber v-if="hoggarinput.hoggarDataTypes[index] === 'Number'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

           <InputDate v-if="hoggarinput.hoggarDataTypes[index] === 'Date'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

           <InputFileEdit v-if="hoggarinput.hoggarDataTypes[index] === 'FileEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />
        
           <InputImageEdit v-if="hoggarinput.hoggarDataTypes[index] === 'ImageEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

           <InputVideoEdit v-if="hoggarinput.hoggarDataTypes[index] === 'VideoEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />


           <InputAudioEdit v-if="hoggarinput.hoggarDataTypes[index] === 'AudioEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

           <MultipleFileEdit v-if="hoggarinput.hoggarDataTypes[index] === 'MultipleFileEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />
          
           <MultipleAudioEdit v-if="hoggarinput.hoggarDataTypes[index] === 'MultipleAudioEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />
          
           <MultipleImageEdit v-if="hoggarinput.hoggarDataTypes[index] === 'MultipleImageEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

           <MultipleVideoEdit v-if="hoggarinput.hoggarDataTypes[index] === 'MultipleVideoEdit'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />

          <Repeater v-if="hoggarinput.hoggarDataTypes[index] === 'Repeater'
          && hoggarinput.wizardForm[hoggarinput.wizardCurrent].includes(index)"
           :cle="index" />


      </div>
    </div>
  </template>

<script setup>
import InputText from '../Inputs/InputText.vue';
import Password from '../Inputs/Password.vue';
import InputSelect from '../Inputs/InputSelect.vue';
import InputRadio from '../Inputs/InputRadio.vue';
import InputNumber from '../Inputs/InputNumber.vue';
import CheckBoxMultiple from '../Inputs/CheckBoxMultiple.vue';
import CheckBox from '../Inputs/CheckBox.vue';
import InputDate from '../Inputs/InputDate.vue';
import Textarea from '../Inputs/Textarea.vue';
import Editeur from '../Inputs/Editeur.vue';
import InputFileEdit from '../Inputs/InputFileEdit.vue';
import InputImageEdit from '../Inputs/InputImageEdit.vue';
import InputVideoEdit from '../Inputs/InputVideoEdit.vue';
import InputAudioEdit from '../Inputs/InputAudioEdit.vue';
import MultipleFileEdit from '../Inputs/MultipleFileEdit.vue';
import MultipleAudioEdit from '../Inputs/MultipleAudioEdit.vue';
import MultipleImageEdit from '../Inputs/MultipleImageEdit.vue';
import MultipleVideoEdit from '../Inputs/MultipleVideoEdit.vue';
import { HoggarInput } from '@/HoggarLibs/stores/hoggarinput';
import Repeater from '../Repeater/Repeater.vue';


const hoggarinput = HoggarInput();
  

</script>

<style lang="css" scoped>

</style>