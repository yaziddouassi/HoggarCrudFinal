<template>
    <div class="w-full mb-[5px]">
      <div>
        <span class="font-bold">
            {{hoggarinput.repeaterLines[props.cle][props.cle2][props.cle3]['label']  }}</span>
      </div>
  
      <div>
        <input
          class="w-full bg-[#E8E8E8] h-[42px] border-[darkblue] border-[1px]"
          type="date"
          v-model="hoggarinput.hoggarDataValues[props.cle][props.cle2][props.cle3]"
          :min="hoggarinput.repeaterLines[props.cle][props.cle2][props.cle3]['min'] !== 'infinite' ? 
                hoggarinput.repeaterLines[props.cle][props.cle2][props.cle3]['min'] : null"
          :max="hoggarinput.repeaterLines[props.cle][props.cle2][props.cle3]['max'] !== 'infinite' ? 
                hoggarinput.repeaterLines[props.cle][props.cle2][props.cle3]['max'] : null">
      </div>
  

       <div v-if="hoggarinput.errors[`${props.cle}.${props.cle2}.${props.cle3}`]" class="text-[red]">
           {{ hoggarinput.errors[`${props.cle}.${props.cle2}.${props.cle3}`] }}
      </div>

      
    </div>
  </template>
  
  <script setup>
  import { HoggarInput } from '@/HoggarLibs/stores/hoggarinput';
  
  const props = defineProps({
    cle: {
      type: String
    },
  cle2 : {
    type :  Number
  },
  cle3 : {
    type :  String
  },

  });
  
  const hoggarinput = HoggarInput();
  </script>