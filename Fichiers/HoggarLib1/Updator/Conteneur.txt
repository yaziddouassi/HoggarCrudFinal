<template>
  <div :class="props.class">
    <div
      v-for="([key, field], index) in Object.entries(hoggarinput.hoggarDataFields).filter(([k, _]) => hoggarinput.hoggarDataTypes[k] !== 'Hidden')"
      :key="key"
    >
      <InputText v-if="hoggarinput.hoggarDataTypes[key] === 'Text'" :cle="key" />
      <Password v-else-if="hoggarinput.hoggarDataTypes[key] === 'Password'" :cle="key" />
      <InputRadio v-else-if="hoggarinput.hoggarDataTypes[key] === 'Radio'" :cle="key" />
      <Textarea v-else-if="hoggarinput.hoggarDataTypes[key] === 'Textarea'" :cle="key" />
      <CheckBox v-else-if="hoggarinput.hoggarDataTypes[key] === 'Checkbox'" :cle="key" />
      <CheckBoxMultiple v-else-if="hoggarinput.hoggarDataTypes[key] === 'CheckboxList'" :cle="key" />
      <InputSelect v-else-if="hoggarinput.hoggarDataTypes[key] === 'Select'" :cle="key" />
      <InputDate v-else-if="hoggarinput.hoggarDataTypes[key] === 'Date'" :cle="key" />
      <InputNumber v-else-if="hoggarinput.hoggarDataTypes[key] === 'Number'" :cle="key" />
      <Editeur v-else-if="hoggarinput.hoggarDataTypes[key] === 'Quill'" :cle="key" />
      <InputImageEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'ImageEdit'" :cle="key" />
      <InputAudioEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'AudioEdit'" :cle="key" />
      <InputVideoEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'VideoEdit'" :cle="key" />
      <InputFileEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'FileEdit'" :cle="key" />
      <MultipleAudioEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'MultipleAudioEdit'" :cle="key" />
      <MultipleImageEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'MultipleImageEdit'" :cle="key" />
      <MultipleVideoEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'MultipleVideoEdit'" :cle="key" />
      <MultipleFileEdit v-else-if="hoggarinput.hoggarDataTypes[key] === 'MultipleFileEdit'" :cle="key" />
      <Repeater v-else-if="hoggarinput.hoggarDataTypes[key] === 'Repeater'" :cle="key" />

    </div>
  </div>
</template>

<script setup>
import { HoggarInput } from '@/HoggarLibs/stores/hoggarinput'

import InputText from '../Inputs/InputText.vue'
import Password from '../Inputs/Password.vue'
import InputSelect from '../Inputs/InputSelect.vue'
import InputNumber from '../Inputs/InputNumber.vue'
import InputRadio from '../Inputs/InputRadio.vue'
import InputDate from '../Inputs/InputDate.vue'
import CheckBoxMultiple from '../Inputs/CheckBoxMultiple.vue'
import CheckBox from '../Inputs/CheckBox.vue'
import Textarea from '../Inputs/Textarea.vue'
import Editeur from '../Inputs/Editeur.vue'

import InputImageEdit from '../Inputs/InputImageEdit.vue'
import InputAudioEdit from '../Inputs/InputAudioEdit.vue'
import InputVideoEdit from '../Inputs/InputVideoEdit.vue'
import InputFileEdit from '../Inputs/InputFileEdit.vue'

import MultipleAudioEdit from '../Inputs/MultipleAudioEdit.vue'
import MultipleImageEdit from '../Inputs/MultipleImageEdit.vue'
import MultipleVideoEdit from '../Inputs/MultipleVideoEdit.vue'
import MultipleFileEdit from '../Inputs/MultipleFileEdit.vue'
import Repeater from '../Repeater/Repeater.vue';

const props = defineProps({
    class: {
      type: String,
      required: true
    }
  })








const hoggarinput = HoggarInput()
</script>

<style scoped>
/* Ton style personnalis√© ici */
</style>